# Generated by Django 5.0.6 on 2024-10-09 10:48

import django.db.models.deletion
import users.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("regions", "0007_artisticaldirector_costumerdesigner"),
    ]

    operations = [
        migrations.CreateModel(
            name="Roles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Активность"),
                ),
                ("name", models.CharField(max_length=300, verbose_name="Название")),
                (
                    "created_date",
                    models.DateField(auto_now_add=True, verbose_name="Дата создания"),
                ),
                (
                    "edit_date",
                    models.DateField(auto_now=True, verbose_name="Дата изменения"),
                ),
                (
                    "default",
                    models.BooleanField(default=False, verbose_name="По умолчанию"),
                ),
                ("slug", models.SlugField()),
            ],
            options={
                "verbose_name": "Роль",
                "verbose_name_plural": "Роли",
            },
        ),
        migrations.CreateModel(
            name="SocialNets",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=300, verbose_name="Название")),
                (
                    "icon",
                    models.ImageField(
                        upload_to="social_network/", verbose_name="Иконка"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Активность"),
                ),
            ],
            options={
                "verbose_name": "Социальные сети",
                "verbose_name_plural": "Социальные сети",
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "username",
                    models.CharField(max_length=255, unique=True, verbose_name="Логин"),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        unique=True,
                        verbose_name="Номер телефона",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="users/avatars/",
                        verbose_name="Аватар",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Имя"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Фамилия"
                    ),
                ),
                (
                    "surname",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Отчество"
                    ),
                ),
                (
                    "site",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=1000,
                        null=True,
                        verbose_name="Сайт",
                    ),
                ),
                (
                    "social_networks",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=2000,
                        null=True,
                        verbose_name="Социальные сети",
                    ),
                ),
                (
                    "male",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Мужской"), ("F", "Женский")],
                        default=None,
                        max_length=1,
                        null=True,
                        verbose_name="Пол",
                    ),
                ),
                (
                    "birthday",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Дата рождения",
                    ),
                ),
                (
                    "company_name",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=1000,
                        null=True,
                        verbose_name="Наименование компании",
                    ),
                ),
                (
                    "platform_name",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=1000,
                        null=True,
                        verbose_name="Наименование площадки",
                    ),
                ),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                (
                    "verify_token",
                    models.CharField(
                        blank=True,
                        default="2c6efca4d8c0d4c4e020aa06f53ad040093ceddd434e484177ea412d47d5534d3d5d7713a0a3ef7b",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="Сотрудник"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Активирован"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False, verbose_name="Суперпользователь"
                    ),
                ),
                (
                    "is_looking",
                    models.BooleanField(default=False, verbose_name="Смотрит"),
                ),
                (
                    "is_shooting",
                    models.BooleanField(default=False, verbose_name="Снимает"),
                ),
                (
                    "is_show",
                    models.BooleanField(default=False, verbose_name="Показывает"),
                ),
                (
                    "is_organize",
                    models.BooleanField(default=False, verbose_name="Продвигает"),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="verified"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="regions.location",
                        verbose_name="Локация",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="regions.region",
                        verbose_name="Регион",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "roles",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.roles",
                        verbose_name="Роль",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
                "unique_together": {("username", "email", "phone")},
            },
            managers=[
                ("objects", users.managers.CustomUserManager()),
            ],
        ),
    ]
