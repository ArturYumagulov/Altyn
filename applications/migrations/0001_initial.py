# Generated by Django 5.0.6 on 2024-09-12 07:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('movies', '0009_alter_agelimit_options_director_biography_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppDirector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активность')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('birthday', models.DateField(blank=True, default=None, null=True, verbose_name='Дата рождения')),
                ('biography', models.TextField(verbose_name='Биография')),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='AppProducer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активность')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('birthday', models.DateField(blank=True, default=None, null=True, verbose_name='Дата рождения')),
                ('biography', models.TextField(verbose_name='Биография')),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='AppScenarist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активность')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('birthday', models.DateField(blank=True, default=None, null=True, verbose_name='Дата рождения')),
                ('biography', models.TextField(verbose_name='Биография')),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активность')),
                ('name', models.CharField(max_length=500, verbose_name='Статус')),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='AltynApp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активность')),
                ('name', models.CharField(max_length=500, verbose_name='Название фильма')),
                ('image', models.ImageField(upload_to='movie_image/', verbose_name='Картинка')),
                ('year', models.DecimalField(decimal_places=0, max_digits=4, verbose_name='Год выпуска')),
                ('compositor_first_name', models.CharField(max_length=1000)),
                ('compositor_last_name', models.CharField(max_length=1000)),
                ('operator_first_name', models.CharField(max_length=1000)),
                ('operator_last_name', models.CharField(max_length=1000)),
                ('rolled_certificate', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Прокатное удостоверение')),
                ('trailer', models.URLField()),
                ('timing', models.CharField(max_length=20, verbose_name='Хронометраж')),
                ('actors', models.TextField(verbose_name='В ролях')),
                ('descriptions', models.TextField(verbose_name='Описание')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('edit_date', models.DateField(auto_now=True, verbose_name='Дата изменения')),
                ('close', models.BooleanField(default=False, verbose_name='Закрытый фильм')),
                ('debut', models.BooleanField(default=False, verbose_name='Дебютный')),
                ('music', models.BooleanField(default=False, verbose_name='Оригинальная музыка')),
                ('country', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Страна')),
                ('other_region', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Другой регион')),
                ('slug', models.SlugField()),
                ('age_limit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.agelimit', verbose_name='Возрастное ограничение')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.category', verbose_name='Категория')),
                ('genre', models.ManyToManyField(blank=True, default=None, to='movies.genre', verbose_name='Жанр')),
                ('kind', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='movies.kind', verbose_name='Вид')),
                ('director', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applications.appdirector', verbose_name='Режиссер')),
                ('producer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applications.appproducer', verbose_name='Продюссер')),
                ('scenarist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applications.appscenarist', verbose_name='Сценарист')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='applications.status', verbose_name='Статус')),
            ],
        ),
    ]
