# Generated by Django 5.0.6 on 2024-09-16 07:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('applications', '0002_alter_appdirector_biography_and_more'),
        ('movies', '0010_delete_region_alter_movie_region'),
        ('regions', '0004_remove_specialist_status_remove_specialist_surname'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CopyrightInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('possessor', models.TextField(verbose_name='Правообладатель')),
                ('possessor_email', models.EmailField(max_length=254, verbose_name='Почта правообладателя')),
                ('phone', models.CharField(max_length=1000, verbose_name='Контакт для связи (телефон)')),
                ('contact_email', models.CharField(max_length=1000, verbose_name='Контакт для связи (почта)')),
            ],
        ),
        migrations.CreateModel(
            name='MovieContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal', models.BooleanField(default=False, verbose_name='Юридическое лицо')),
                ('individual', models.BooleanField(default=False, verbose_name='Физическое лицо')),
                ('organization_name', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Название организации')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Фамилия')),
                ('surname', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('movie_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Адрес регистрации')),
                ('inn', models.CharField(blank=True, max_length=1000, null=True, verbose_name='ИНН')),
                ('payroll', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Расчётный счёт')),
                ('bank', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Название банка')),
                ('bik', models.CharField(blank=True, max_length=1000, null=True, verbose_name='БИК')),
                ('correction', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Коррекционный счет')),
            ],
        ),
        migrations.CreateModel(
            name='MoviePortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('festivals', models.TextField(verbose_name='Участие в фестивалях')),
                ('internet', models.TextField(verbose_name='Охват в интернете')),
                ('smi', models.TextField(verbose_name='Публикации в СМИ')),
                ('materials', models.TextField(verbose_name='Ссылка для скачивания материалов')),
            ],
        ),
        migrations.RemoveField(
            model_name='appdirector',
            name='slug',
        ),
        migrations.RemoveField(
            model_name='appproducer',
            name='slug',
        ),
        migrations.RemoveField(
            model_name='appscenarist',
            name='slug',
        ),
        migrations.CreateModel(
            name='InviteSpecialists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=225, verbose_name='Электронный адрес')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Фамилия')),
                ('who_is', models.CharField(blank=True, default=None, max_length=1000, null=True, verbose_name='Кем является')),
                ('accept', models.BooleanField(default=False, verbose_name='Принято')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('edit_date', models.DateField(auto_now=True, verbose_name='Дата изменения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='MovieApp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активность')),
                ('name', models.CharField(max_length=500, verbose_name='Название фильма')),
                ('year', models.DecimalField(decimal_places=0, max_digits=4, verbose_name='Год выпуска')),
                ('rolled_certificate', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Прокатное удостоверение')),
                ('trailer', models.URLField()),
                ('timing', models.CharField(max_length=20, verbose_name='Хронометраж')),
                ('actors', models.TextField(blank=True, default=None, null=True, verbose_name='В ролях')),
                ('logline', models.TextField(verbose_name='Логлайн')),
                ('debut', models.BooleanField(default=False, verbose_name='Дебютный')),
                ('music', models.BooleanField(default=False, verbose_name='Оригинальная музыка')),
                ('country', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Страна')),
                ('other_country', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Другая страна')),
                ('other_region', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Другой регион')),
                ('slug', models.SlugField()),
                ('compositor_first_name', models.CharField(blank=True, default=None, max_length=1000, null=True, verbose_name='Имя композитора')),
                ('compositor_last_name', models.CharField(blank=True, default=None, max_length=1000, null=True, verbose_name='Фамилия композитора')),
                ('operator_first_name', models.CharField(max_length=1000)),
                ('operator_last_name', models.CharField(max_length=1000)),
                ('artistical_director_first_name', models.CharField(blank=True, default=None, max_length=1000, null=True, verbose_name='Имя художник постановщик')),
                ('artistical_director_last_name', models.CharField(blank=True, default=None, max_length=1000, null=True, verbose_name='Фамилия художник постановщик')),
                ('costume_designer_first_name', models.CharField(blank=True, default=None, max_length=1000, null=True, verbose_name='Имя художник по костюмам')),
                ('costume_designer_last_name', models.CharField(blank=True, default=None, max_length=1000, null=True, verbose_name='Имя художник по костюмам')),
                ('other_shooting_group', models.TextField(blank=True, default=None, null=True, verbose_name='Остальные члены съемочной команды')),
                ('agreement_to_placement', models.BooleanField(default=False, verbose_name='согласие на размещение на сайте')),
                ('agreement_to_vote', models.BooleanField(default=False, verbose_name='согласие на голосование')),
                ('agreement_to_no_commerce_show', models.BooleanField(default=False, verbose_name='согласие на некоммерческие показы')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('edit_date', models.DateField(auto_now=True, verbose_name='Дата изменения')),
                ('age_limit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.agelimit', verbose_name='Возрастное ограничение')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.category', verbose_name='Категория')),
                ('copyright_information', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='applications.copyrightinformation', verbose_name='Информация о правообладателе')),
                ('director', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applications.appdirector', verbose_name='Режиссер')),
                ('genre', models.ManyToManyField(blank=True, default=None, to='movies.genre', verbose_name='Жанр')),
                ('kind', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='movies.kind', verbose_name='Вид')),
                ('producer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applications.appproducer', verbose_name='Продюссер')),
                ('regions', models.ManyToManyField(blank=True, default=None, to='regions.region', verbose_name='Регионы')),
                ('scenarist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applications.appscenarist', verbose_name='Сценарист')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='applications.status', verbose_name='Статус')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('portfolio', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='applications.movieportfolio', verbose_name='Ссылка на портфолио')),
            ],
        ),
        migrations.CreateModel(
            name='SpecialistApp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активность')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Фамилия')),
                ('other_speciality', models.CharField(blank=True, default=None, max_length=1000, null=True, verbose_name='Другая специальность')),
                ('portfolio', models.URLField(verbose_name='Ссылка на портфолио')),
                ('city', models.CharField(max_length=1000, verbose_name='Населенный пункт')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('email', models.EmailField(max_length=225, verbose_name='Электронный адрес')),
                ('social_link', models.TextField(verbose_name='Ссылка на социальные сети')),
                ('descriptions', models.TextField(verbose_name='Дополнительно')),
                ('biography', models.TextField(blank=True, default=None, null=True, verbose_name='Биография')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('edit_date', models.DateField(auto_now=True, verbose_name='Дата изменения')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='regions.region', verbose_name='Регион')),
                ('spec', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='regions.specialist')),
                ('speciality', models.ManyToManyField(related_name='app_specialities', to='regions.speciality')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='applications.status', verbose_name='Статус')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Специалист',
                'verbose_name_plural': 'Специалист',
            },
        ),
        migrations.DeleteModel(
            name='AltynApp',
        ),
    ]
